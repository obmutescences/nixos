// Reference: https://github.com/YaLTeR/niri/wiki/Configuration
input {
    keyboard {
        xkb {
            // NOTE: No need to ctrl:nocaps since I am using home row mods
            layout "us"
        }
		repeat-delay 200
		repeat-rate 80
    }
    touchpad {
        tap
        natural-scroll
    }
    mouse {

    }
    trackpoint {

    }
    warp-mouse-to-focus
    focus-follows-mouse max-scroll-amount="0%"
    // workspace-auto-back-and-forth
    mod-key "Super"
}
// tsuki
output "GIGA-BYTE TECHNOLOGY CO., LTD. G34WQC A 23022B003495" {
    mode "3440x1440@144.000"
    scale 1
    transform "normal"
}
// company desktop
output "DP-1" {
    mode "2560x1440@180.001"
    scale 1
    transform "normal"
    // position x=1920 y=0
    // focus-at-startup
}
environment {
    // ELECTRON_OZONE_PLATFORM_HINT "auto"
    DISPLAY ":12"
	MOZ_ENABLE_WAYLAND "1"
	NIXOS_OZONE_WL "1"
    QT_AUTO_SCREEN_SCALE_FACTOR "1"
    QT_QPA_PLATFORM "wayland;xcb"
    QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
	SDL_VIDEODRIVER "wayland"
	CLUTTER_BACKEND "wayland"
	QT_QPA_PLATFORMTHEME "qt6ct"
	GDK_BACKEND "wayland,x11,*"
	OZONE_PLATFORM "wayland"
	EGL_PLATFORM "wayland"
	GDK_SCALE "1"
	WLR_RENDERER_ALLOW_SOFTWARE "1"

	XMODIFIERS "@im=fcitx"
	QT_IM_MODULE "fcitx"
	SDL_IM_MODULE "fcitx"
}
// Settings that influence how windows are positioned and sized.
layout {
    gaps 3
    center-focused-column "on-overflow"
    preset-column-widths {
        proportion 0.5
        proportion 1.0
    }
    preset-window-heights {
        proportion 0.5
        proportion 1.0
    }
    default-column-width {
        proportion 0.4
    }
    focus-ring {
        off
        width 4
        active-gradient from="#e67e80ff" to="#dbbc7fff" angle=45
        inactive-gradient from="#1e8b50d9" to="#50b050d9" angle=45 relative-to="workspace-view"
    }
    border {
        width 2
        active-gradient from="#e67e80ff" to="#dbbc7fff"
        inactive-gradient from="#1e8b50d9" to="#50b050d9"
    }
    shadow {
        on
        draw-behind-window true
        softness 30
        spread 5
        offset x=0 y=5
        color "#00000070"
    }
    struts {

    }

	blur {
        on
        passes 2
        radius 3
        noise 0.02
    }
}

spawn-at-startup "xwayland-satellite" ":12"
spawn-at-startup "fcitx5" "-d" "--replace"
spawn-at-startup "FlClash"
spawn-at-startup "swww-daemon"
spawn-at-startup "waybar"
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "gtk-theme" "adwaita-dark"
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "color-scheme" "prefer-dark"
spawn-at-startup "dbus-update-activation-environment" "--systemd" "--all"
// spawn-at-startup "buckle" "-p" "~/.config/nixos/home/sources/keybord-sound/alpacas"
spawn-at-startup "dunst"
spawn-at-startup "keybord-sound"
spawn-at-startup "set-wallpaper"
prefer-no-csd
screenshot-path "~/Pictures/Screenshots/Screenshot_%Y-%m-%d_%H-%M-%S.png"
// Animation settings.
animations {
	slowdown 2.0
    window-open {
      duration-ms 200
      curve "linear"
      custom-shader r"
			vec4 expanding_circle(vec3 coords_geo, vec3 size_geo) {
			vec3 coords_tex = niri_geo_to_tex * coords_geo;
			vec4 color = texture2D(niri_tex, coords_tex.st);
			vec2 coords = (coords_geo.xy - vec2(0.5, 0.5)) * size_geo.xy * 2.0;
			coords = coords / length(size_geo.xy);
			float p = niri_clamped_progress;
			if (p * p <= dot(coords, coords))
			color = vec4(0.0);
			return color;
		}

		vec4 open_color(vec3 coords_geo, vec3 size_geo) {
			return expanding_circle(coords_geo, size_geo);
		   }
		  "
	 }

   window-close {
      duration-ms 250
      curve "linear"
      custom-shader r"
		vec4 fall_and_rotate(vec3 coords_geo, vec3 size_geo) {
		float progress = niri_clamped_progress * niri_clamped_progress;
		vec2 coords = (coords_geo.xy - vec2(0.5, 1.0)) * size_geo.xy;
		coords.y -= progress * 1440.0;
		float random = (niri_random_seed - 0.5) / 2.0;
		random = sign(random) - random;
		float max_angle = 0.5 * random;
		float angle = progress * max_angle;
		mat2 rotate = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
		coords = rotate * coords;
		coords_geo = vec3(coords / size_geo.xy + vec2(0.5, 1.0), 1.0);
		vec3 coords_tex = niri_geo_to_tex * coords_geo;
		vec4 color = texture2D(niri_tex, coords_tex.st);

		return color;
	  }
	   vec4 close_color(vec3 coords_geo, vec3 size_geo) {
		return fall_and_rotate(coords_geo, size_geo);
	  }
    "
   }
}

overview {
    zoom 0.25
    backdrop-color "transparent"
    workspace-shadow {
        off
    }
}
window-rule {
  opacity 0.84
}
// Work around WezTerm's initial configure bug by setting an empty default-column-width.
window-rule {
    match app-id="thunar"
    default-column-width {
        proportion 0.6
    }
}
window-rule {
    match app-id="kitty"
    default-column-width {
        proportion 0.45
    }
}
window-rule {
	match app-id=r#"^\.blueman-manager-wrapped$"#
    default-column-width {
        proportion 0.35
    }
	default-window-height { fixed 600; }
	open-floating true
	open-focused true
}
window-rule {
	match app-id="blueman-manager"
    default-column-width {
        proportion 0.35
    }
	default-window-height { fixed 600; }
	open-floating true
	open-focused true
}
window-rule {
	match app-id="Alacritty"
    default-column-width {
        proportion 0.45
    }
	default-window-height { 
		proportion 0.75
	}
	open-floating true
	open-focused true
}
window-rule {
	match app-id="flameshot"
	open-floating true
}
window-rule {
	match app-id="org.kde.polkit-kde-authentication-agent-1"
	open-floating true
}
window-rule {
	match app-id="qt5ct"
	open-floating true
}
window-rule {
	match app-id="qt6ct"
	open-floating true
}
window-rule {
	match app-id="nwg-look"
	open-floating true
}
window-rule {
	match app-id="org.pulseaudio.pavucontrol"
	open-floating true
}
// Example: enable rounded corners for all windows.
window-rule {
    geometry-corner-radius 12
    clip-to-geometry true
}
// tweak opacity for inactive windows
// window-rule {
//     match is-active=false
//     opacity 0.2
// }
binds {
    Mod+Shift+Slash {
        show-hotkey-overlay
    }
    Mod+Q {
        close-window
    }
    Mod+Return {
        spawn "kitty"
    }
    Mod+E {
        spawn "thunar"
    }
    Mod+F {
        spawn "zen"
    }
    Mod+X {
        spawn "powermenu"
    }
    Mod+N {
        spawn "start-neovide"
    }
    Mod+SPACE {
        spawn "menu"
    }
    Mod+ALT+Right {
        spawn "next-wallpaper"
    }
    Mod+ALT+Left {
        spawn "prev-wallpaper"
    }
    Mod+P {
        // spawn "flameshot" "gui" "-r" "|" "wl-copy" "-t" "image/png"
		spawn "screenshot-pin"
    }
	Mod+Ctrl+P {
		spawn "flameshot" "gui"
	}
    Mod+L {
        spawn "hyprlock"
    }

    XF86AudioRaiseVolume allow-when-locked=true {
        spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"
    }
    XF86AudioLowerVolume allow-when-locked=true {
        spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"
    }
    XF86AudioMute allow-when-locked=true {
        spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"
    }
    XF86AudioMicMute allow-when-locked=true {
        spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"
    }
    Mod+Left {
        focus-column-left
    }
    Mod+Right {
        focus-column-right
    }
    Mod+Down {
        focus-window-down
    }
    Mod+Up {
        focus-window-up
    }
    Alt+Tab {
        focus-column-right-or-first
    }
    // Ctrl+Tab {
    //     focus-column-right
    // }
    Mod+Ctrl+Down {
        move-window-down
    }
    Mod+Ctrl+Up {
        move-window-up
    }
    Mod+Ctrl+H {
        move-column-left
    }
    Mod+Ctrl+L {
        move-column-right
    }
    Mod+J {
        focus-window-or-workspace-down
    }
    Mod+K {
        focus-window-or-workspace-up
    }
    Mod+Ctrl+J {
        move-window-down-or-to-workspace-down
    }
    Mod+Ctrl+K {
        move-window-up-or-to-workspace-up
    }
    Mod+Home {
        focus-column-first
    }
    Mod+End {
        focus-column-last
    }
    Mod+Ctrl+Home {
        move-column-to-first
    }
    Mod+Ctrl+End {
        move-column-to-last
    }
    Mod+Shift+H {
        focus-monitor-left
    }
    Mod+Shift+J {
        focus-monitor-down
    }
    Mod+Shift+K {
        focus-monitor-up
    }
    Mod+Shift+L {
        focus-monitor-right
    }
    Mod+Shift+Ctrl+Left {
        move-column-to-monitor-left
    }
    Mod+Shift+Ctrl+Down {
        move-column-to-monitor-down
    }
    Mod+Shift+Ctrl+Up {
        move-column-to-monitor-up
    }
    Mod+Shift+Ctrl+Right {
        move-column-to-monitor-right
    }
    Mod+Shift+Ctrl+H {
        move-column-to-monitor-left
    }
    Mod+Shift+Ctrl+J {
        move-column-to-monitor-down
    }
    Mod+Shift+Ctrl+K {
        move-column-to-monitor-up
    }
    Mod+Shift+Ctrl+L {
        move-column-to-monitor-right
    }
    Mod+Page_Down {
        focus-workspace-down
    }
    Mod+Page_Up {
        focus-workspace-up
    }
    Mod+U {
        focus-workspace-down
    }
    Mod+I {
        focus-workspace-up
    }
    Mod+Ctrl+Page_Down {
        move-column-to-workspace-down
    }
    Mod+Ctrl+Page_Up {
        move-column-to-workspace-up
    }
    Mod+Ctrl+U {
        move-column-to-workspace-down
    }
    Mod+Ctrl+I {
        move-column-to-workspace-up
    }
    Mod+Shift+U {
        move-workspace-down
    }
    Mod+Shift+I {
        move-workspace-up
    }
    Mod+WheelScrollDown cooldown-ms=150 {
        focus-workspace-down
    }
    Mod+WheelScrollUp cooldown-ms=150 {
        focus-workspace-up
    }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 {
        move-column-to-workspace-down
    }
    Mod+Ctrl+WheelScrollUp cooldown-ms=150 {
        move-column-to-workspace-up
    }
    Mod+WheelScrollRight {
        focus-column-right
    }
    Mod+WheelScrollLeft {
        focus-column-left
    }
    Mod+Ctrl+WheelScrollRight {
        move-column-right
    }
    Mod+Ctrl+WheelScrollLeft {
        move-column-left
    }
    Mod+Shift+WheelScrollDown {
        focus-column-right
    }
    Mod+Shift+WheelScrollUp {
        focus-column-left
    }
    Mod+Ctrl+Shift+WheelScrollDown {
        move-column-right
    }
    Mod+Ctrl+Shift+WheelScrollUp {
        move-column-left
    }
    Ctrl+1 {
        focus-workspace 1
    }
    Ctrl+2 {
        focus-workspace 2
    }
    Ctrl+3 {
        focus-workspace 3
    }
    Ctrl+4 {
        focus-workspace 4
    }
    Ctrl+5 {
        focus-workspace 5
    }
    Ctrl+6 {
        focus-workspace 6
    }
    Ctrl+7 {
        focus-workspace 7
    }
    Ctrl+8 {
        focus-workspace 8
    }
    Ctrl+9 {
        focus-workspace 9
    }
    Mod+Shift+1 {
        move-column-to-workspace 1
    }
    Mod+Shift+2 {
        move-column-to-workspace 2
    }
    Mod+Shift+3 {
        move-column-to-workspace 3
    }
    Mod+Shift+4 {
        move-column-to-workspace 4
    }
    Mod+Shift+5 {
        move-column-to-workspace 5
    }
    Mod+Shift+6 {
        move-column-to-workspace 6
    }
    Mod+Shift+7 {
        move-column-to-workspace 7
    }
    Mod+Shift+8 {
        move-column-to-workspace 8
    }
    Mod+Shift+9 {
        move-column-to-workspace 9
    }
    Mod+BracketLeft {
        consume-or-expel-window-left
    }
    Mod+BracketRight {
        consume-or-expel-window-right
    }
    Mod+Comma {
        consume-window-into-column
    }
    Mod+Period {
        expel-window-from-column
    }
    Mod+W {
        switch-preset-column-width
    }
    Mod+Shift+W {
        switch-preset-window-height
    }
    // Expand the focused column to space not taken up by other fully visible columns.
    Mod+Shift+F {
        maximize-column
    }
    Mod+Ctrl+F {
        fullscreen-window
    }
    Mod+C {
        center-column
    }
    Mod+Shift+Left {
        set-column-width "-5%"
    }
    Mod+Shift+Right {
        set-column-width "+5%"
    }
    Mod+Shift+Up {
        set-window-height "-5%"
    }
    Mod+Shift+Down {
        set-window-height "+5%"
    }
    Mod+V {
        toggle-window-floating
    }
    Mod+Shift+V {
        switch-focus-between-floating-and-tiling
    }
    Mod+Ctrl+R {
        screenshot
    }
    Mod+Ctrl+M {
        screenshot-screen
    }
    Mod+Ctrl+W {
        screenshot-window
    }
    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false {
        toggle-keyboard-shortcuts-inhibit
    }
    Mod+Shift+E {
        quit
    }
    Ctrl+Alt+Delete {
        quit
    }
    Mod+Shift+P {
        power-off-monitors
    }
}
